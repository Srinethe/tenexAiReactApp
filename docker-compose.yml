version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: tenexai_backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://neondb_owner:npg_1vQlU3nSFwpM@ep-muddy-feather-af2d329g-pooler.c-2.us-west-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require
      - JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
      - BCRYPT_ROUNDS=12
      - UPLOAD_DIR=./uploads
      - MAX_FILE_SIZE=10485760
    ports:
      - "3001:3001"
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads
    networks:
      - tenexai_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: tenexai_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - tenexai_network

volumes:
  uploads_data:

networks:
  tenexai_network:
    driver: bridge 